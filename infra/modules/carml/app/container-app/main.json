{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "811549268081936202"
    },
    "name": "Container Apps",
    "description": "This module deploys a Container App.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Container App."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "ingressExternal": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Bool indicating if app exposes an external http endpoint."
      }
    },
    "ingressTransport": {
      "type": "string",
      "defaultValue": "auto",
      "allowedValues": [
        "auto",
        "http",
        "http2",
        "tcp"
      ],
      "metadata": {
        "description": "Optional. Ingress transport protocol."
      }
    },
    "ingressAllowInsecure": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
      }
    },
    "ingressTargetPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Optional. Target Port in containers for traffic from ingress."
      }
    },
    "scaleMaxReplicas": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set."
      }
    },
    "scaleMinReplicas": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Minimum number of container replicas."
      }
    },
    "scaleRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Scaling rules."
      }
    },
    "activeRevisionsMode": {
      "type": "string",
      "defaultValue": "Single",
      "allowedValues": [
        "Multiple",
        "Single"
      ],
      "metadata": {
        "description": "Optional. ActiveRevisionsMode controls how active revisions are handled for the Container app."
      }
    },
    "environmentId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource ID of environment."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "CanNotDelete",
        "ReadOnly"
      ],
      "metadata": {
        "description": "Optional. Specify the type of lock."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "registries": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Collection of private container registry credentials for containers used by the Container app."
      }
    },
    "systemAssignedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enables system assigned managed identity on the resource."
      }
    },
    "userAssignedIdentities": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The set of user assigned identities associated with the resource, the userAssignedIdentities dictionary keys will be ARM resource IDs and The dictionary values can be empty objects ({}) in requests."
      }
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    },
    "customDomains": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Custom domain bindings for Container App hostnames."
      }
    },
    "exposedPort": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Exposed Port in containers for TCP traffic from ingress."
      }
    },
    "ipSecurityRestrictions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Rules to restrict incoming IP address."
      }
    },
    "trafficLabel": {
      "type": "string",
      "defaultValue": "label-1",
      "metadata": {
        "description": "Optional. Associates a traffic label with a revision. Label name should be consist of lower case alphanumeric characters or dashes."
      }
    },
    "trafficLatestRevision": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Indicates that the traffic weight belongs to a latest stable revision."
      }
    },
    "trafficRevisionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of a revision."
      }
    },
    "trafficWeight": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Optional. Traffic weight assigned to a revision."
      }
    },
    "dapr": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Dapr configuration for the Container App."
      }
    },
    "maxInactiveRevisions": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. Max inactive revisions a Container App can have."
      }
    },
    "containers": {
      "type": "array",
      "metadata": {
        "description": "Required. List of container definitions for the Container App."
      }
    },
    "initContainersTemplate": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of specialized containers that run before app containers."
      }
    },
    "secrets": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The secrets of the Container App."
      }
    },
    "revisionSuffix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. User friendly suffix that is appended to the revision name."
      }
    },
    "volumes": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of volume definitions for the Container App."
      }
    },
    "workloadProfileType": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Workload profile type to pin for container app execution."
      }
    }
  },
  "variables": {
    "secretList": "[if(not(empty(parameters('secrets'))), parameters('secrets').secureList, createArray())]",
    "identityType": "[if(parameters('systemAssignedIdentity'), if(not(empty(parameters('userAssignedIdentities'))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedIdentities'))), 'UserAssigned', 'None'))]",
    "identity": "[if(not(equals(variables('identityType'), 'None')), createObject('type', variables('identityType'), 'userAssignedIdentities', if(not(empty(parameters('userAssignedIdentities'))), parameters('userAssignedIdentities'), null())), null())]"
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-10-01",
      "name": "[parameters('name')]",
      "tags": "[parameters('tags')]",
      "location": "[parameters('location')]",
      "identity": "[variables('identity')]",
      "properties": {
        "environmentId": "[parameters('environmentId')]",
        "configuration": {
          "activeRevisionsMode": "[parameters('activeRevisionsMode')]",
          "dapr": "[if(not(empty(parameters('dapr'))), parameters('dapr'), null())]",
          "ingress": {
            "allowInsecure": "[parameters('ingressAllowInsecure')]",
            "customDomains": "[if(not(empty(parameters('customDomains'))), parameters('customDomains'), null())]",
            "exposedPort": "[parameters('exposedPort')]",
            "external": "[parameters('ingressExternal')]",
            "ipSecurityRestrictions": "[if(not(empty(parameters('ipSecurityRestrictions'))), parameters('ipSecurityRestrictions'), null())]",
            "targetPort": "[parameters('ingressTargetPort')]",
            "traffic": [
              {
                "label": "[parameters('trafficLabel')]",
                "latestRevision": "[parameters('trafficLatestRevision')]",
                "revisionName": "[parameters('trafficRevisionName')]",
                "weight": "[parameters('trafficWeight')]"
              }
            ],
            "transport": "[parameters('ingressTransport')]"
          },
          "maxInactiveRevisions": "[parameters('maxInactiveRevisions')]",
          "registries": "[if(not(empty(parameters('registries'))), parameters('registries'), null())]",
          "secrets": "[variables('secretList')]"
        },
        "template": {
          "containers": "[parameters('containers')]",
          "initContainers": "[if(not(empty(parameters('initContainersTemplate'))), parameters('initContainersTemplate'), null())]",
          "revisionSuffix": "[parameters('revisionSuffix')]",
          "scale": {
            "maxReplicas": "[parameters('scaleMaxReplicas')]",
            "minReplicas": "[parameters('scaleMinReplicas')]",
            "rules": "[if(not(empty(parameters('scaleRules'))), parameters('scaleRules'), null())]"
          },
          "volumes": "[if(not(empty(parameters('volumes'))), parameters('volumes'), null())]"
        },
        "workloadProfileType": "[parameters('workloadProfileType')]"
      }
    },
    {
      "condition": "[not(empty(parameters('lock')))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.App/containerApps/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "containerApp_roleAssignments",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-containerApp-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "description": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), createObject('value', parameters('roleAssignments')[copyIndex()].description), createObject('value', ''))]",
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "principalType": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), createObject('value', parameters('roleAssignments')[copyIndex()].principalType), createObject('value', ''))]",
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "condition": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), createObject('value', parameters('roleAssignments')[copyIndex()].condition), createObject('value', ''))]",
          "delegatedManagedIdentityResourceId": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), createObject('value', parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId), createObject('value', ''))]",
          "resourceId": {
            "value": "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "17140491380029994713"
            }
          },
          "parameters": {
            "principalIds": {
              "type": "array",
              "metadata": {
                "description": "Required. The IDs of the principals to assign the role to."
              }
            },
            "roleDefinitionIdOrName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
              }
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the resource to apply the role assignment to."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the role assignment."
              }
            },
            "condition": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
              }
            },
            "conditionVersion": {
              "type": "string",
              "defaultValue": "2.0",
              "allowedValues": [
                "2.0"
              ],
              "metadata": {
                "description": "Optional. Version of the condition."
              }
            },
            "delegatedManagedIdentityResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Id of the delegated managed identity resource."
              }
            }
          },
          "variables": {
            "builtInRoleNames": {
              "ContainerApp Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "Role Based Access Control Administrator (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.App/containerApps/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(resourceId('Microsoft.App/containerApps', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "description": "[parameters('description')]",
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]",
                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Container App."
      },
      "value": "[resourceId('Microsoft.App/containerApps', parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the Container App was deployed into."
      },
      "value": "[resourceGroup().name]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the Container App."
      },
      "value": "[parameters('name')]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-10-01', 'full').location]"
    }
  }
}